---
- name: Check Last Update and Reboot Times on RHEL Servers
  hosts: balancers
  gather_facts: yes
  tasks:
    - name: Check last update time (RHEL)
      shell: rpm -q --last kernel
      register: last_update
      changed_when: false
      failed_when: false

    - name: Check last reboot time
      shell: uptime -s
      register: last_reboot
      changed_when: false
      failed_when: false

    - name: Calculate update and reboot age
      set_fact:
        current_time: "{{ ansible_date_time.epoch }}"
      when: last_update.stdout is defined and last_reboot.stdout is defined

    - name: Calculate update age
      set_fact:
        update_time: "{{ last_update.stdout | regex_replace('^.*\\s', '') }}"
      when: last_update.stdout is defined

    - name: Calculate reboot age
      set_fact:
        reboot_time: "{{ last_reboot.stdout }}"
      when: last_reboot.stdout is defined

    - name: Check if the server is not updated or rebooted in the last 3 to 6 months
      shell: |
        current_time="{{ current_time | int }}"
        update_time="{{ update_time | int }}"
        reboot_time="{{ reboot_time | int }}"
        three_months_age=$((7776000))  # 90 days
        six_months_age=$((15552000))   # 180 days
        if [ "$((current_time - update_time))" -ge "$three_months_age" ] && [ "$((current_time - update_time))" -le "$six_months_age" ] || \
           [ "$((current_time - reboot_time))" -ge "$three_months_age" ] && [ "$((current_time - reboot_time))" -le "$six_months_age" ]; then
          echo "Server {{ inventory_hostname }} has not been updated or rebooted in the last 3 to 6 months."
          result="Server {{ inventory_hostname }} has not been updated or rebooted in the last 3 to 6 months."
        else
          result="Server {{ inventory_hostname }} is up to date."
        fi
      register: server_result
      when: last_update.stdout is defined and last_reboot.stdout is defined

    - debug:
        var: server_result

